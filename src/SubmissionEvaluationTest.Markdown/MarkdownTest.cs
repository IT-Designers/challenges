using System.Text.RegularExpressions;
using NUnit.Framework;
using SubmissionEvaluation.Shared.Classes;

namespace SubmissionEvaluationTest.Markdown
{
    public class Tests
    {
        [SetUp]
        public void Setup()
        {
        }

        [Test]
        public void MarkdownWithConsoleParsing()
        {
            var input =
                "In dieser Aufgabe soll ein Bürgeramt mit Schaltern und einer Warteschlange für anstehende Bürger simuliert werden. Das gesamte Bürgeramt hat nur eine Warteschlange. Ein Schalter hat eine eindeutige Id. Sobald ein Schalter frei wird, stellt sich der nächste Bürger aus der Warteschlange an diesen an. Sind mehrere Schalter frei, so belegt der Bürger den Schalter mit der niedrigsten Id. Ein Bürger selbst hat einen Namen und sein Anliegen.\r\n\r\nDie Anzahl der Schalter wird beim Programmstart als Parameter übergeben. Die weitere Bedienung der Anwendung erfolgt über die Standard Eingabe. Hierbei gibt es folgende drei Befehle:\r\n\r\n*\t`add <Name>;<Anliegen>`<br>\r\n\tEin neuer Bürger betritt das Bürgeramt. Der Name wird vom Anliegen durch ein Semikolon getrennt. Ist ein Schalter frei, so geht der Bürger an diesem Schalter. Ansonsten stellt er sich in der Warteschlange an.\r\n*\t`process <SchalterId>`<br>\r\n\tDer Bürger an Schalter &lt;SchalterId&gt; wird bearbeitet. Der nächste Bürger aus der Warteschlange geht nun an diesen Schalter. Die Verarbeitung erfolgt dabei synchron. Erst nach der Verarbeitung kann der nächste Befehl eingegeben werden.\r\n*\t`exit`<br>\r\n\tDas Bürgeramt schließt seine Pforten. Alle an den Schalter wartende Bürger werden noch bedient. Die Bürger aus der Warteschlange müssen leider morgen wieder kommen. Sind alle Bürger bearbeitet, wird die Anwendung beendet.\r\n\r\n**Hinweis:** Die Aufgabe soll synchron ablaufen. Eine Parallelisierung durch Threads oder seperate Prozesse ist nicht notwendig.\r\n\r\nFolgende Bildschirmausgaben sollen gemacht werden:\r\n\r\n|Aktion|Ausgabe|\r\n|------|-------|\r\n|Bürger betritt Bürgeramt|&lt;Name&gt; betritt das Bürgeramt. Grund: &lt;Anliegen&gt;|\r\n|Bürger stellt sich an Warteschlange an|&lt;Name&gt; stellt sich in der Warteschlange an.|\r\n|Bürger geht an Schalter|&lt;Name&gt; geht an Schalter &lt;SchalterId&gt;.|\r\n|Bürger fertig bearbeitet|Das Anliegen &lt;Anliegen&gt; von &lt;Name&gt; wurde bearbeitet. Er/Sie verlässt das Bürgeramt.|\r\n\r\nBeispiele:\r\n{% output %}\r\n> center.exe 3\r\n`add Hans Meister;Führerschein`\r\nHans Meister betritt das Bürgeramt. Grund: Führerschein\r\nHans Meister geht an Schalter 1.\r\n`add Lisa Lote;Umzug`\r\nLisa Lote betritt das Bürgeramt. Grund: Umzug\r\nLisa Lote geht an Schalter 2.\r\n`add Rosa Roth;Auswandern`\r\nRosa Roth betritt das Bürgeramt. Grund: Auswandern\r\nRosa Roth geht an Schalter 3.\r\n`add Roland Steiger;Ausweis`\r\nRoland Steiger betritt das Bürgeramt. Grund: Ausweis\r\nRoland Steiger stellt sich in der Warteschlange an.\r\n`add Franz Manz;keine Ahnung`\r\nFranz Manz betritt das Bürgeramt. Grund: keine Ahnung\r\nFranz Manz stellt sich in der Warteschlange an.\r\n`process 3`\r\nDas Anliegen Auswandern von Rosa Roth wurde bearbeitet. Er/Sie verlässt das Bürgeramt.\r\nRoland Steiger geht an Schalter 3.\r\n`process 1`\r\nDas Anliegen Führerschein von Hans Meister wurde bearbeitet. Er/Sie verlässt das Bürgeramt.\r\nFranz Manz geht an Schalter 1.\r\n`process 1`\r\nDas Anliegen keine Ahnung von Franz Manz wurde bearbeitet. Er/Sie verlässt das Bürgeramt.\r\n`exit`\r\nDas Anliegen Umzug von Lisa Lote wurde bearbeitet. Er/Sie verlässt das Bürgeramt.\r\nDas Anliegen Ausweis von Roland Steiger wurde bearbeitet. Er/Sie verlässt das Bürgeramt.\r\n{% endoutput %}";
            var result = MarkdownToHtml.Convert(input);
            Assert.AreEqual(
                "<p>In dieser Aufgabe soll ein Bürgeramt mit Schaltern und einer Warteschlange für anstehende Bürger simuliert werden. Das gesamte Bürgeramt hat nur eine Warteschlange. Ein Schalter hat eine eindeutige Id. Sobald ein Schalter frei wird, stellt sich der nächste Bürger aus der Warteschlange an diesen an. Sind mehrere Schalter frei, so belegt der Bürger den Schalter mit der niedrigsten Id. Ein Bürger selbst hat einen Namen und sein Anliegen.</p>\n<p>Die Anzahl der Schalter wird beim Programmstart als Parameter übergeben. Die weitere Bedienung der Anwendung erfolgt über die Standard Eingabe. Hierbei gibt es folgende drei Befehle:</p>\n<ul>\n<li><code>add &lt;Name&gt;;&lt;Anliegen&gt;</code><br>\nEin neuer Bürger betritt das Bürgeramt. Der Name wird vom Anliegen durch ein Semikolon getrennt. Ist ein Schalter frei, so geht der Bürger an diesem Schalter. Ansonsten stellt er sich in der Warteschlange an.</li>\n<li><code>process &lt;SchalterId&gt;</code><br>\nDer Bürger an Schalter &lt;SchalterId&gt; wird bearbeitet. Der nächste Bürger aus der Warteschlange geht nun an diesen Schalter. Die Verarbeitung erfolgt dabei synchron. Erst nach der Verarbeitung kann der nächste Befehl eingegeben werden.</li>\n<li><code>exit</code><br>\nDas Bürgeramt schließt seine Pforten. Alle an den Schalter wartende Bürger werden noch bedient. Die Bürger aus der Warteschlange müssen leider morgen wieder kommen. Sind alle Bürger bearbeitet, wird die Anwendung beendet.</li>\n</ul>\n<p><strong>Hinweis:</strong> Die Aufgabe soll synchron ablaufen. Eine Parallelisierung durch Threads oder seperate Prozesse ist nicht notwendig.</p>\n<p>Folgende Bildschirmausgaben sollen gemacht werden:</p>\n<table>\n<thead>\n<tr>\n<th>Aktion</th>\n<th>Ausgabe</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Bürger betritt Bürgeramt</td>\n<td>&lt;Name&gt; betritt das Bürgeramt. Grund: &lt;Anliegen&gt;</td>\n</tr>\n<tr>\n<td>Bürger stellt sich an Warteschlange an</td>\n<td>&lt;Name&gt; stellt sich in der Warteschlange an.</td>\n</tr>\n<tr>\n<td>Bürger geht an Schalter</td>\n<td>&lt;Name&gt; geht an Schalter &lt;SchalterId&gt;.</td>\n</tr>\n<tr>\n<td>Bürger fertig bearbeitet</td>\n<td>Das Anliegen &lt;Anliegen&gt; von &lt;Name&gt; wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</td>\n</tr>\n</tbody>\n</table>\n<p>Beispiele:</p>\n<div><pre class='consoleblock'>\n<span class=\"console_start\">> center.exe 3</span>\n<span class=\"console_input\">add Hans Meister;Führerschein</span>\nHans Meister betritt das Bürgeramt. Grund: Führerschein\nHans Meister geht an Schalter 1.\n<span class=\"console_input\">add Lisa Lote;Umzug</span>\nLisa Lote betritt das Bürgeramt. Grund: Umzug\nLisa Lote geht an Schalter 2.\n<span class=\"console_input\">add Rosa Roth;Auswandern</span>\nRosa Roth betritt das Bürgeramt. Grund: Auswandern\nRosa Roth geht an Schalter 3.\n<span class=\"console_input\">add Roland Steiger;Ausweis</span>\nRoland Steiger betritt das Bürgeramt. Grund: Ausweis\nRoland Steiger stellt sich in der Warteschlange an.\n<span class=\"console_input\">add Franz Manz;keine Ahnung</span>\nFranz Manz betritt das Bürgeramt. Grund: keine Ahnung\nFranz Manz stellt sich in der Warteschlange an.\n<span class=\"console_input\">process 3</span>\nDas Anliegen Auswandern von Rosa Roth wurde bearbeitet. Er/Sie verlässt das Bürgeramt.\nRoland Steiger geht an Schalter 3.\n<span class=\"console_input\">process 1</span>\nDas Anliegen Führerschein von Hans Meister wurde bearbeitet. Er/Sie verlässt das Bürgeramt.\nFranz Manz geht an Schalter 1.\n<span class=\"console_input\">process 1</span>\nDas Anliegen keine Ahnung von Franz Manz wurde bearbeitet. Er/Sie verlässt das Bürgeramt.\n<span class=\"console_input\">exit</span>\nDas Anliegen Umzug von Lisa Lote wurde bearbeitet. Er/Sie verlässt das Bürgeramt.\nDas Anliegen Ausweis von Roland Steiger wurde bearbeitet. Er/Sie verlässt das Bürgeramt.\n</pre></div>",
                result);
        }

        [Test]
        public void AlreadyConvertedMarkdownWithConsoleParsing()
        {
            var input =
                "<p>In dieser Aufgabe soll ein Bürgeramt mit Schaltern und einer Warteschlange für anstehende Bürger simuliert werden. Das gesamte Bürgeramt hat nur eine Warteschlange. Ein Schalter hat eine eindeutige Id. Sobald ein Schalter frei wird, stellt sich der nächste Bürger aus der Warteschlange an diesen an. Sind mehrere Schalter frei, so belegt der Bürger den Schalter mit der niedrigsten Id. Ein Bürger selbst hat einen Namen und sein Anliegen.</p>\n<p>Die Anzahl der Schalter wird beim Programmstart als Parameter übergeben. Die weitere Bedienung der Anwendung erfolgt über die Standard Eingabe. Hierbei gibt es folgende drei Befehle:</p>\n<ul>\n<li><code>add &lt;Name&gt;;&lt;Anliegen&gt;</code><br>\nEin neuer Bürger betritt das Bürgeramt. Der Name wird vom Anliegen durch ein Semikolon getrennt. Ist ein Schalter frei, so geht der Bürger an diesem Schalter. Ansonsten stellt er sich in der Warteschlange an.</li>\n<li><code>process &lt;SchalterId&gt;</code><br>\nDer Bürger an Schalter &lt;SchalterId&gt; wird bearbeitet. Der nächste Bürger aus der Warteschlange geht nun an diesen Schalter. Die Verarbeitung erfolgt dabei synchron. Erst nach der Verarbeitung kann der nächste Befehl eingegeben werden.</li>\n<li><code>exit</code><br>\nDas Bürgeramt schließt seine Pforten. Alle an den Schalter wartende Bürger werden noch bedient. Die Bürger aus der Warteschlange müssen leider morgen wieder kommen. Sind alle Bürger bearbeitet, wird die Anwendung beendet.</li>\n</ul>\n<p><strong>Hinweis:</strong> Die Aufgabe soll synchron ablaufen. Eine Parallelisierung durch Threads oder seperate Prozesse ist nicht notwendig.</p>\n<p>Folgende Bildschirmausgaben sollen gemacht werden:</p>\n<table>\n<thead>\n<tr>\n<th>Aktion</th>\n<th>Ausgabe</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Bürger betritt Bürgeramt</td>\n<td>&lt;Name&gt; betritt das Bürgeramt. Grund: &lt;Anliegen&gt;</td>\n</tr>\n<tr>\n<td>Bürger stellt sich an Warteschlange an</td>\n<td>&lt;Name&gt; stellt sich in der Warteschlange an.</td>\n</tr>\n<tr>\n<td>Bürger geht an Schalter</td>\n<td>&lt;Name&gt; geht an Schalter &lt;SchalterId&gt;.</td>\n</tr>\n<tr>\n<td>Bürger fertig bearbeitet</td>\n<td>Das Anliegen &lt;Anliegen&gt; von &lt;Name&gt; wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</td>\n</tr>\n</tbody>\n</table>\n<p>Beispiele:</p>\n";
            input +=
                "<p>{% output %}</p>\n<p><span class=\"console_start\">> center.exe 3</span></p>\n<p>`add Hans Meister;Führerschein`</p>\n<p>Hans Meister betritt das Bürgeramt. Grund: Führerschein</p>\n<p>Hans Meister geht an Schalter 1.</p>\n<p>`add Lisa Lote;Umzug`</p>\n<p>Lisa Lote betritt das Bürgeramt. Grund: Umzug</p>\n<p>Lisa Lote geht an Schalter 2.</p>\n<p>`add Rosa Roth;Auswandern`</p>\n<p>Rosa Roth betritt das Bürgeramt. Grund: Auswandern</p>\n<p>Rosa Roth geht an Schalter 3.</p>\n<p>`add Roland Steiger;Ausweis`</p>\n<p>Roland Steiger betritt das Bürgeramt. Grund: Ausweis</p>\n<p>Roland Steiger stellt sich in der Warteschlange an.</p>\n<p>`add Franz Manz;keine Ahnung`</p>\n<p>Franz Manz betritt das Bürgeramt. Grund: keine Ahnung</p>\n<p>Franz Manz stellt sich in der Warteschlange an.</p>\n<p>`process 3`</p>\n<p>Das Anliegen Auswandern von Rosa Roth wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</p>\n<p>Roland Steiger geht an Schalter 3.</p>\n<p>`process 1`</p>\n<p>Das Anliegen Führerschein von Hans Meister wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</p>\n<p>Franz Manz geht an Schalter 1.</p>\n<p>`process 1`</p>\n<p>Das Anliegen keine Ahnung von Franz Manz wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</p>\n<p>`exit`</p>\n<p>Das Anliegen Umzug von Lisa Lote wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</p>\n<p>Das Anliegen Ausweis von Roland Steiger wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</p>\n<p>{% endoutput %}</p>";
            var result = MarkdownToHtml.Convert(input);
            var expectedResult =
                "<p>In dieser Aufgabe soll ein Bürgeramt mit Schaltern und einer Warteschlange für anstehende Bürger simuliert werden. Das gesamte Bürgeramt hat nur eine Warteschlange. Ein Schalter hat eine eindeutige Id. Sobald ein Schalter frei wird, stellt sich der nächste Bürger aus der Warteschlange an diesen an. Sind mehrere Schalter frei, so belegt der Bürger den Schalter mit der niedrigsten Id. Ein Bürger selbst hat einen Namen und sein Anliegen.</p>\n<p>Die Anzahl der Schalter wird beim Programmstart als Parameter übergeben. Die weitere Bedienung der Anwendung erfolgt über die Standard Eingabe. Hierbei gibt es folgende drei Befehle:</p>\n<ul>\n<li><code>add &lt;Name&gt;;&lt;Anliegen&gt;</code><br>\nEin neuer Bürger betritt das Bürgeramt. Der Name wird vom Anliegen durch ein Semikolon getrennt. Ist ein Schalter frei, so geht der Bürger an diesem Schalter. Ansonsten stellt er sich in der Warteschlange an.</li>\n<li><code>process &lt;SchalterId&gt;</code><br>\nDer Bürger an Schalter &lt;SchalterId&gt; wird bearbeitet. Der nächste Bürger aus der Warteschlange geht nun an diesen Schalter. Die Verarbeitung erfolgt dabei synchron. Erst nach der Verarbeitung kann der nächste Befehl eingegeben werden.</li>\n<li><code>exit</code><br>\nDas Bürgeramt schließt seine Pforten. Alle an den Schalter wartende Bürger werden noch bedient. Die Bürger aus der Warteschlange müssen leider morgen wieder kommen. Sind alle Bürger bearbeitet, wird die Anwendung beendet.</li>\n</ul>\n<p><strong>Hinweis:</strong> Die Aufgabe soll synchron ablaufen. Eine Parallelisierung durch Threads oder seperate Prozesse ist nicht notwendig.</p>\n<p>Folgende Bildschirmausgaben sollen gemacht werden:</p>\n<table>\n<thead>\n<tr>\n<th>Aktion</th>\n<th>Ausgabe</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Bürger betritt Bürgeramt</td>\n<td>&lt;Name&gt; betritt das Bürgeramt. Grund: &lt;Anliegen&gt;</td>\n</tr>\n<tr>\n<td>Bürger stellt sich an Warteschlange an</td>\n<td>&lt;Name&gt; stellt sich in der Warteschlange an.</td>\n</tr>\n<tr>\n<td>Bürger geht an Schalter</td>\n<td>&lt;Name&gt; geht an Schalter &lt;SchalterId&gt;.</td>\n</tr>\n<tr>\n<td>Bürger fertig bearbeitet</td>\n<td>Das Anliegen &lt;Anliegen&gt; von &lt;Name&gt; wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</td>\n</tr>\n</tbody>\n</table>\n<p>Beispiele:</p>\n";
            expectedResult +=
                "<p>\n<div><pre class='consoleblock'></p>\n<p><span class=\"console_start\">> center.exe 3</span></p>\n<p><span class=\"console_input\">add Hans Meister;Führerschein</span></p>\n<p>Hans Meister betritt das Bürgeramt. Grund: Führerschein</p>\n<p>Hans Meister geht an Schalter 1.</p>\n<p><span class=\"console_input\">add Lisa Lote;Umzug</span></p>\n<p>Lisa Lote betritt das Bürgeramt. Grund: Umzug</p>\n<p>Lisa Lote geht an Schalter 2.</p>\n<p><span class=\"console_input\">add Rosa Roth;Auswandern</span></p>\n<p>Rosa Roth betritt das Bürgeramt. Grund: Auswandern</p>\n<p>Rosa Roth geht an Schalter 3.</p>\n<p><span class=\"console_input\">add Roland Steiger;Ausweis</span></p>\n<p>Roland Steiger betritt das Bürgeramt. Grund: Ausweis</p>\n<p>Roland Steiger stellt sich in der Warteschlange an.</p>\n<p><span class=\"console_input\">add Franz Manz;keine Ahnung</span></p>\n<p>Franz Manz betritt das Bürgeramt. Grund: keine Ahnung</p>\n<p>Franz Manz stellt sich in der Warteschlange an.</p>\n<p><span class=\"console_input\">process 3</span></p>\n<p>Das Anliegen Auswandern von Rosa Roth wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</p>\n<p>Roland Steiger geht an Schalter 3.</p>\n<p><span class=\"console_input\">process 1</span></p>\n<p>Das Anliegen Führerschein von Hans Meister wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</p>\n<p>Franz Manz geht an Schalter 1.</p>\n<p><span class=\"console_input\">process 1</span></p>\n<p>Das Anliegen keine Ahnung von Franz Manz wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</p>\n<p><span class=\"console_input\">exit</span></p>\n<p>Das Anliegen Umzug von Lisa Lote wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</p>\n<p>Das Anliegen Ausweis von Roland Steiger wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</p>\n<p></pre></div></p>";
            Assert.AreEqual(expectedResult, result);
        }

        [Test]
        public void MarkdownWithoutConsoleParsingOnce()
        {
            const string input =
                "In dieser Aufgabe soll ein Bürgeramt mit Schaltern und einer Warteschlange für anstehende Bürger simuliert werden. Das gesamte Bürgeramt hat nur eine Warteschlange. Ein Schalter hat eine eindeutige Id. Sobald ein Schalter frei wird, stellt sich der nächste Bürger aus der Warteschlange an diesen an. Sind mehrere Schalter frei, so belegt der Bürger den Schalter mit der niedrigsten Id. Ein Bürger selbst hat einen Namen und sein Anliegen.\r\n\r\nDie Anzahl der Schalter wird beim Programmstart als Parameter übergeben. Die weitere Bedienung der Anwendung erfolgt über die Standard Eingabe. Hierbei gibt es folgende drei Befehle:\r\n\r\n*\t`add <Name>;<Anliegen>`<br>\r\n\tEin neuer Bürger betritt das Bürgeramt. Der Name wird vom Anliegen durch ein Semikolon getrennt. Ist ein Schalter frei, so geht der Bürger an diesem Schalter. Ansonsten stellt er sich in der Warteschlange an.\r\n*\t`process <SchalterId>`<br>\r\n\tDer Bürger an Schalter &lt;SchalterId&gt; wird bearbeitet. Der nächste Bürger aus der Warteschlange geht nun an diesen Schalter. Die Verarbeitung erfolgt dabei synchron. Erst nach der Verarbeitung kann der nächste Befehl eingegeben werden.\r\n*\t`exit`<br>\r\n\tDas Bürgeramt schließt seine Pforten. Alle an den Schalter wartende Bürger werden noch bedient. Die Bürger aus der Warteschlange müssen leider morgen wieder kommen. Sind alle Bürger bearbeitet, wird die Anwendung beendet.\r\n\r\n**Hinweis:** Die Aufgabe soll synchron ablaufen. Eine Parallelisierung durch Threads oder seperate Prozesse ist nicht notwendig.\r\n\r\nFolgende Bildschirmausgaben sollen gemacht werden:\r\n\r\n|Aktion|Ausgabe|\r\n|------|-------|\r\n|Bürger betritt Bürgeramt|&lt;Name&gt; betritt das Bürgeramt. Grund: &lt;Anliegen&gt;|\r\n|Bürger stellt sich an Warteschlange an|&lt;Name&gt; stellt sich in der Warteschlange an.|\r\n|Bürger geht an Schalter|&lt;Name&gt; geht an Schalter &lt;SchalterId&gt;.|\r\n|Bürger fertig bearbeitet|Das Anliegen &lt;Anliegen&gt; von &lt;Name&gt; wurde bearbeitet. Er/Sie verlässt das Bürgeramt.|\r\n\r\nBeispiele:\r\n{% output %}\r\n> center.exe 3\r\n`add Hans Meister;Führerschein`\r\nHans Meister betritt das Bürgeramt. Grund: Führerschein\r\nHans Meister geht an Schalter 1.\r\n`add Lisa Lote;Umzug`\r\nLisa Lote betritt das Bürgeramt. Grund: Umzug\r\nLisa Lote geht an Schalter 2.\r\n`add Rosa Roth;Auswandern`\r\nRosa Roth betritt das Bürgeramt. Grund: Auswandern\r\nRosa Roth geht an Schalter 3.\r\n`add Roland Steiger;Ausweis`\r\nRoland Steiger betritt das Bürgeramt. Grund: Ausweis\r\nRoland Steiger stellt sich in der Warteschlange an.\r\n`add Franz Manz;keine Ahnung`\r\nFranz Manz betritt das Bürgeramt. Grund: keine Ahnung\r\nFranz Manz stellt sich in der Warteschlange an.\r\n`process 3`\r\nDas Anliegen Auswandern von Rosa Roth wurde bearbeitet. Er/Sie verlässt das Bürgeramt.\r\nRoland Steiger geht an Schalter 3.\r\n`process 1`\r\nDas Anliegen Führerschein von Hans Meister wurde bearbeitet. Er/Sie verlässt das Bürgeramt.\r\nFranz Manz geht an Schalter 1.\r\n`process 1`\r\nDas Anliegen keine Ahnung von Franz Manz wurde bearbeitet. Er/Sie verlässt das Bürgeramt.\r\n`exit`\r\nDas Anliegen Umzug von Lisa Lote wurde bearbeitet. Er/Sie verlässt das Bürgeramt.\r\nDas Anliegen Ausweis von Roland Steiger wurde bearbeitet. Er/Sie verlässt das Bürgeramt.\r\n{% endoutput %}";
            var result = MarkdownToHtml.Convert(input, null, false);
            var matchBegin = Regex.Match(result, @"\{%\s*output\s*%\}");
            var firstHalf = result.Substring(0, matchBegin.Index - 3);
            Assert.AreEqual(
                "<p>In dieser Aufgabe soll ein Bürgeramt mit Schaltern und einer Warteschlange für anstehende Bürger simuliert werden. Das gesamte Bürgeramt hat nur eine Warteschlange. Ein Schalter hat eine eindeutige Id. Sobald ein Schalter frei wird, stellt sich der nächste Bürger aus der Warteschlange an diesen an. Sind mehrere Schalter frei, so belegt der Bürger den Schalter mit der niedrigsten Id. Ein Bürger selbst hat einen Namen und sein Anliegen.</p>\n<p>Die Anzahl der Schalter wird beim Programmstart als Parameter übergeben. Die weitere Bedienung der Anwendung erfolgt über die Standard Eingabe. Hierbei gibt es folgende drei Befehle:</p>\n<ul>\n<li><code>add &lt;Name&gt;;&lt;Anliegen&gt;</code><br>\nEin neuer Bürger betritt das Bürgeramt. Der Name wird vom Anliegen durch ein Semikolon getrennt. Ist ein Schalter frei, so geht der Bürger an diesem Schalter. Ansonsten stellt er sich in der Warteschlange an.</li>\n<li><code>process &lt;SchalterId&gt;</code><br>\nDer Bürger an Schalter &lt;SchalterId&gt; wird bearbeitet. Der nächste Bürger aus der Warteschlange geht nun an diesen Schalter. Die Verarbeitung erfolgt dabei synchron. Erst nach der Verarbeitung kann der nächste Befehl eingegeben werden.</li>\n<li><code>exit</code><br>\nDas Bürgeramt schließt seine Pforten. Alle an den Schalter wartende Bürger werden noch bedient. Die Bürger aus der Warteschlange müssen leider morgen wieder kommen. Sind alle Bürger bearbeitet, wird die Anwendung beendet.</li>\n</ul>\n<p><strong>Hinweis:</strong> Die Aufgabe soll synchron ablaufen. Eine Parallelisierung durch Threads oder seperate Prozesse ist nicht notwendig.</p>\n<p>Folgende Bildschirmausgaben sollen gemacht werden:</p>\n<table>\n<thead>\n<tr>\n<th>Aktion</th>\n<th>Ausgabe</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Bürger betritt Bürgeramt</td>\n<td>&lt;Name&gt; betritt das Bürgeramt. Grund: &lt;Anliegen&gt;</td>\n</tr>\n<tr>\n<td>Bürger stellt sich an Warteschlange an</td>\n<td>&lt;Name&gt; stellt sich in der Warteschlange an.</td>\n</tr>\n<tr>\n<td>Bürger geht an Schalter</td>\n<td>&lt;Name&gt; geht an Schalter &lt;SchalterId&gt;.</td>\n</tr>\n<tr>\n<td>Bürger fertig bearbeitet</td>\n<td>Das Anliegen &lt;Anliegen&gt; von &lt;Name&gt; wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</td>\n</tr>\n</tbody>\n</table>\n<p>Beispiele:</p>\n",
                firstHalf);
            const string expectedTerminal =
                "<p>{% output %}</p>\n<p><span class=\"console_start\">> center.exe 3</span></p>\n<p>`add Hans Meister;Führerschein`</p>\n<p>Hans Meister betritt das Bürgeramt. Grund: Führerschein</p>\n<p>Hans Meister geht an Schalter 1.</p>\n<p>`add Lisa Lote;Umzug`</p>\n<p>Lisa Lote betritt das Bürgeramt. Grund: Umzug</p>\n<p>Lisa Lote geht an Schalter 2.</p>\n<p>`add Rosa Roth;Auswandern`</p>\n<p>Rosa Roth betritt das Bürgeramt. Grund: Auswandern</p>\n<p>Rosa Roth geht an Schalter 3.</p>\n<p>`add Roland Steiger;Ausweis`</p>\n<p>Roland Steiger betritt das Bürgeramt. Grund: Ausweis</p>\n<p>Roland Steiger stellt sich in der Warteschlange an.</p>\n<p>`add Franz Manz;keine Ahnung`</p>\n<p>Franz Manz betritt das Bürgeramt. Grund: keine Ahnung</p>\n<p>Franz Manz stellt sich in der Warteschlange an.</p>\n<p>`process 3`</p>\n<p>Das Anliegen Auswandern von Rosa Roth wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</p>\n<p>Roland Steiger geht an Schalter 3.</p>\n<p>`process 1`</p>\n<p>Das Anliegen Führerschein von Hans Meister wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</p>\n<p>Franz Manz geht an Schalter 1.</p>\n<p>`process 1`</p>\n<p>Das Anliegen keine Ahnung von Franz Manz wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</p>\n<p>`exit`</p>\n<p>Das Anliegen Umzug von Lisa Lote wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</p>\n<p>Das Anliegen Ausweis von Roland Steiger wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</p>\n<p>{% endoutput %}</p>";
            var secondHalf = result[(matchBegin.Index - 3)..];
            Assert.AreEqual(expectedTerminal, secondHalf);
        }

        [Test]
        public void MarkdownWithoutConsoleParsingTwice()
        {
            const string input =
                "In dieser Aufgabe soll ein Bürgeramt mit Schaltern und einer Warteschlange für anstehende Bürger simuliert werden. Das gesamte Bürgeramt hat nur eine Warteschlange. Ein Schalter hat eine eindeutige Id. Sobald ein Schalter frei wird, stellt sich der nächste Bürger aus der Warteschlange an diesen an. Sind mehrere Schalter frei, so belegt der Bürger den Schalter mit der niedrigsten Id. Ein Bürger selbst hat einen Namen und sein Anliegen.\r\n\r\nDie Anzahl der Schalter wird beim Programmstart als Parameter übergeben. Die weitere Bedienung der Anwendung erfolgt über die Standard Eingabe. Hierbei gibt es folgende drei Befehle:\r\n\r\n*\t`add <Name>;<Anliegen>`<br>\r\n\tEin neuer Bürger betritt das Bürgeramt. Der Name wird vom Anliegen durch ein Semikolon getrennt. Ist ein Schalter frei, so geht der Bürger an diesem Schalter. Ansonsten stellt er sich in der Warteschlange an.\r\n*\t`process <SchalterId>`<br>\r\n\tDer Bürger an Schalter &lt;SchalterId&gt; wird bearbeitet. Der nächste Bürger aus der Warteschlange geht nun an diesen Schalter. Die Verarbeitung erfolgt dabei synchron. Erst nach der Verarbeitung kann der nächste Befehl eingegeben werden.\r\n*\t`exit`<br>\r\n\tDas Bürgeramt schließt seine Pforten. Alle an den Schalter wartende Bürger werden noch bedient. Die Bürger aus der Warteschlange müssen leider morgen wieder kommen. Sind alle Bürger bearbeitet, wird die Anwendung beendet.\r\n\r\n**Hinweis:** Die Aufgabe soll synchron ablaufen. Eine Parallelisierung durch Threads oder seperate Prozesse ist nicht notwendig.\r\n\r\nFolgende Bildschirmausgaben sollen gemacht werden:\r\n\r\n|Aktion|Ausgabe|\r\n|------|-------|\r\n|Bürger betritt Bürgeramt|&lt;Name&gt; betritt das Bürgeramt. Grund: &lt;Anliegen&gt;|\r\n|Bürger stellt sich an Warteschlange an|&lt;Name&gt; stellt sich in der Warteschlange an.|\r\n|Bürger geht an Schalter|&lt;Name&gt; geht an Schalter &lt;SchalterId&gt;.|\r\n|Bürger fertig bearbeitet|Das Anliegen &lt;Anliegen&gt; von &lt;Name&gt; wurde bearbeitet. Er/Sie verlässt das Bürgeramt.|\r\n\r\nBeispiele:\r\n{% output %}\r\n> center.exe 3\r\n`add Hans Meister;Führerschein`\r\nHans Meister betritt das Bürgeramt. Grund: Führerschein\r\nHans Meister geht an Schalter 1.\r\n`add Lisa Lote;Umzug`\r\nLisa Lote betritt das Bürgeramt. Grund: Umzug\r\nLisa Lote geht an Schalter 2.\r\n`add Rosa Roth;Auswandern`\r\nRosa Roth betritt das Bürgeramt. Grund: Auswandern\r\nRosa Roth geht an Schalter 3.\r\n`add Roland Steiger;Ausweis`\r\nRoland Steiger betritt das Bürgeramt. Grund: Ausweis\r\nRoland Steiger stellt sich in der Warteschlange an.\r\n`add Franz Manz;keine Ahnung`\r\nFranz Manz betritt das Bürgeramt. Grund: keine Ahnung\r\nFranz Manz stellt sich in der Warteschlange an.\r\n`process 3`\r\nDas Anliegen Auswandern von Rosa Roth wurde bearbeitet. Er/Sie verlässt das Bürgeramt.\r\nRoland Steiger geht an Schalter 3.\r\n`process 1`\r\nDas Anliegen Führerschein von Hans Meister wurde bearbeitet. Er/Sie verlässt das Bürgeramt.\r\nFranz Manz geht an Schalter 1.\r\n`process 1`\r\nDas Anliegen keine Ahnung von Franz Manz wurde bearbeitet. Er/Sie verlässt das Bürgeramt.\r\n`exit`\r\nDas Anliegen Umzug von Lisa Lote wurde bearbeitet. Er/Sie verlässt das Bürgeramt.\r\nDas Anliegen Ausweis von Roland Steiger wurde bearbeitet. Er/Sie verlässt das Bürgeramt.\r\n{% endoutput %}";
            var result = MarkdownToHtml.Convert(input, null, false);
            var matchBegin = Regex.Match(result, @"\{%\s*output\s*%\}");
            const string expectedFirstHalf =
                "<p>In dieser Aufgabe soll ein Bürgeramt mit Schaltern und einer Warteschlange für anstehende Bürger simuliert werden. Das gesamte Bürgeramt hat nur eine Warteschlange. Ein Schalter hat eine eindeutige Id. Sobald ein Schalter frei wird, stellt sich der nächste Bürger aus der Warteschlange an diesen an. Sind mehrere Schalter frei, so belegt der Bürger den Schalter mit der niedrigsten Id. Ein Bürger selbst hat einen Namen und sein Anliegen.</p>\n<p>Die Anzahl der Schalter wird beim Programmstart als Parameter übergeben. Die weitere Bedienung der Anwendung erfolgt über die Standard Eingabe. Hierbei gibt es folgende drei Befehle:</p>\n<ul>\n<li><code>add &lt;Name&gt;;&lt;Anliegen&gt;</code><br>\nEin neuer Bürger betritt das Bürgeramt. Der Name wird vom Anliegen durch ein Semikolon getrennt. Ist ein Schalter frei, so geht der Bürger an diesem Schalter. Ansonsten stellt er sich in der Warteschlange an.</li>\n<li><code>process &lt;SchalterId&gt;</code><br>\nDer Bürger an Schalter &lt;SchalterId&gt; wird bearbeitet. Der nächste Bürger aus der Warteschlange geht nun an diesen Schalter. Die Verarbeitung erfolgt dabei synchron. Erst nach der Verarbeitung kann der nächste Befehl eingegeben werden.</li>\n<li><code>exit</code><br>\nDas Bürgeramt schließt seine Pforten. Alle an den Schalter wartende Bürger werden noch bedient. Die Bürger aus der Warteschlange müssen leider morgen wieder kommen. Sind alle Bürger bearbeitet, wird die Anwendung beendet.</li>\n</ul>\n<p><strong>Hinweis:</strong> Die Aufgabe soll synchron ablaufen. Eine Parallelisierung durch Threads oder seperate Prozesse ist nicht notwendig.</p>\n<p>Folgende Bildschirmausgaben sollen gemacht werden:</p>\n<table>\n<thead>\n<tr>\n<th>Aktion</th>\n<th>Ausgabe</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Bürger betritt Bürgeramt</td>\n<td>&lt;Name&gt; betritt das Bürgeramt. Grund: &lt;Anliegen&gt;</td>\n</tr>\n<tr>\n<td>Bürger stellt sich an Warteschlange an</td>\n<td>&lt;Name&gt; stellt sich in der Warteschlange an.</td>\n</tr>\n<tr>\n<td>Bürger geht an Schalter</td>\n<td>&lt;Name&gt; geht an Schalter &lt;SchalterId&gt;.</td>\n</tr>\n<tr>\n<td>Bürger fertig bearbeitet</td>\n<td>Das Anliegen &lt;Anliegen&gt; von &lt;Name&gt; wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</td>\n</tr>\n</tbody>\n</table>\n<p>Beispiele:</p>\n";
            var firstHalf = result.Substring(0, matchBegin.Index - 3);
            Assert.AreEqual(expectedFirstHalf, firstHalf);
            const string expectedTerminal =
                "<p>{% output %}</p>\n<p><span class=\"console_start\">> center.exe 3</span></p>\n<p>`add Hans Meister;Führerschein`</p>\n<p>Hans Meister betritt das Bürgeramt. Grund: Führerschein</p>\n<p>Hans Meister geht an Schalter 1.</p>\n<p>`add Lisa Lote;Umzug`</p>\n<p>Lisa Lote betritt das Bürgeramt. Grund: Umzug</p>\n<p>Lisa Lote geht an Schalter 2.</p>\n<p>`add Rosa Roth;Auswandern`</p>\n<p>Rosa Roth betritt das Bürgeramt. Grund: Auswandern</p>\n<p>Rosa Roth geht an Schalter 3.</p>\n<p>`add Roland Steiger;Ausweis`</p>\n<p>Roland Steiger betritt das Bürgeramt. Grund: Ausweis</p>\n<p>Roland Steiger stellt sich in der Warteschlange an.</p>\n<p>`add Franz Manz;keine Ahnung`</p>\n<p>Franz Manz betritt das Bürgeramt. Grund: keine Ahnung</p>\n<p>Franz Manz stellt sich in der Warteschlange an.</p>\n<p>`process 3`</p>\n<p>Das Anliegen Auswandern von Rosa Roth wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</p>\n<p>Roland Steiger geht an Schalter 3.</p>\n<p>`process 1`</p>\n<p>Das Anliegen Führerschein von Hans Meister wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</p>\n<p>Franz Manz geht an Schalter 1.</p>\n<p>`process 1`</p>\n<p>Das Anliegen keine Ahnung von Franz Manz wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</p>\n<p>`exit`</p>\n<p>Das Anliegen Umzug von Lisa Lote wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</p>\n<p>Das Anliegen Ausweis von Roland Steiger wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</p>\n<p>{% endoutput %}</p>";
            var secondHalf = result[(matchBegin.Index - 3)..];
            Assert.AreEqual(expectedTerminal, secondHalf);
            result = MarkdownToHtml.Convert(result, null, false);
            const string expectedSecondTerminal =
                "<p>\n{% output %}</p>\n<p><span class=\"console_start\">> center.exe 3</span></p>\n<p>`add Hans Meister;Führerschein`</p>\n<p>Hans Meister betritt das Bürgeramt. Grund: Führerschein</p>\n<p>Hans Meister geht an Schalter 1.</p>\n<p>`add Lisa Lote;Umzug`</p>\n<p>Lisa Lote betritt das Bürgeramt. Grund: Umzug</p>\n<p>Lisa Lote geht an Schalter 2.</p>\n<p>`add Rosa Roth;Auswandern`</p>\n<p>Rosa Roth betritt das Bürgeramt. Grund: Auswandern</p>\n<p>Rosa Roth geht an Schalter 3.</p>\n<p>`add Roland Steiger;Ausweis`</p>\n<p>Roland Steiger betritt das Bürgeramt. Grund: Ausweis</p>\n<p>Roland Steiger stellt sich in der Warteschlange an.</p>\n<p>`add Franz Manz;keine Ahnung`</p>\n<p>Franz Manz betritt das Bürgeramt. Grund: keine Ahnung</p>\n<p>Franz Manz stellt sich in der Warteschlange an.</p>\n<p>`process 3`</p>\n<p>Das Anliegen Auswandern von Rosa Roth wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</p>\n<p>Roland Steiger geht an Schalter 3.</p>\n<p>`process 1`</p>\n<p>Das Anliegen Führerschein von Hans Meister wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</p>\n<p>Franz Manz geht an Schalter 1.</p>\n<p>`process 1`</p>\n<p>Das Anliegen keine Ahnung von Franz Manz wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</p>\n<p>`exit`</p>\n<p>Das Anliegen Umzug von Lisa Lote wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</p>\n<p>Das Anliegen Ausweis von Roland Steiger wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</p>\n<p>{% endoutput %}</p>";
            firstHalf = result.Substring(0, matchBegin.Index - 3);
            secondHalf = result[(matchBegin.Index - 3)..];
            Assert.AreEqual(expectedFirstHalf, firstHalf);
            Assert.AreEqual(expectedSecondTerminal, secondHalf);
        }

        [Test]
        public void QuillEditorInputWithConsoleParsing()
        {
            var input =
                "<p>In dieser Aufgabe soll ein Bürgeramt mit Schaltern und einer Warteschlange für anstehende Bürger simuliert werden. Das gesamte Bürgeramt hat nur eine Warteschlange. Ein Schalter hat eine eindeutige Id. Sobald ein Schalter frei wird, stellt sich der nächste Bürger aus der Warteschlange an diesen an. Sind mehrere Schalter frei, so belegt der Bürger den Schalter mit der niedrigsten Id. Ein Bürger selbst hat einen Namen und sein Anliegen.</p>\n<p>Die Anzahl der Schalter wird beim Programmstart als Parameter übergeben. Die weitere Bedienung der Anwendung erfolgt über die Standard Eingabe. Hierbei gibt es folgende drei Befehle:</p>\n<ol>\n<li data-list=\"bullet\">\n<span class=\"ql-ui\" contenteditable=\"false\"></span><code>add &lt;Name&gt;;&lt;Anliegen&gt;</code></li>\n<li data-list=\"bullet\">\n<span class=\"ql-ui\" contenteditable=\"false\"></span>\nEin neuer Bürger betritt das Bürgeramt. Der Name wird vom Anliegen durch ein Semikolon getrennt. Ist ein Schalter frei, so geht der Bürger an diesem Schalter. Ansonsten stellt er sich in der Warteschlange an.</li>\n<li data-list=\"bullet\">\n<span class=\"ql-ui\" contenteditable=\"false\"></span><code>process &lt;SchalterId&gt;</code></li>\n<li data-list=\"bullet\">\n<span class=\"ql-ui\" contenteditable=\"false\"></span>\nDer Bürger an Schalter &lt;SchalterId&gt; wird bearbeitet. Der nächste Bürger aus der Warteschlange geht nun an diesen Schalter. Die Verarbeitung erfolgt dabei synchron. Erst nach der Verarbeitung kann der nächste Befehl eingegeben werden.</li>\n<li data-list=\"bullet\">\n<span class=\"ql-ui\" contenteditable=\"false\"></span><code>exit</code></li>\n<li data-list=\"bullet\">\n<span class=\"ql-ui\" contenteditable=\"false\"></span>\nDas Bürgeramt schließt seine Pforten. Alle an den Schalter wartende Bürger werden noch bedient. Die Bürger aus der Warteschlange müssen leider morgen wieder kommen. Sind alle Bürger bearbeitet, wird die Anwendung beendet.</li>\n</ol>\n<p><strong>Hinweis:</strong> Die Aufgabe soll synchron ablaufen. Eine Parallelisierung durch Threads oder seperate Prozesse ist nicht notwendig.</p>\n<p>Folgende Bildschirmausgaben sollen gemacht werden:</p>\n<table>\n<thead>\n<tr>\n<th>Aktion</th>\n<th>Ausgabe</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Bürger betritt Bürgeramt</td>\n<td>&lt;Name&gt; betritt das Bürgeramt. Grund: &lt;Anliegen&gt;</td>\n</tr>\n<tr>\n<td>Bürger stellt sich an Warteschlange an</td>\n<td>&lt;Name&gt; stellt sich in der Warteschlange an.</td>\n</tr>\n<tr>\n<td>Bürger geht an Schalter</td>\n<td>&lt;Name&gt; geht an Schalter &lt;SchalterId&gt;.</td>\n</tr>\n<tr>\n<td>Bürger fertig bearbeitet</td>\n<td>Das Anliegen &lt;Anliegen&gt; von &lt;Name&gt; wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</td>\n</tr>\n</tbody>\n</table>\n<p>Beispiele:</p>\n";
            input +=
                "<p>{% output %}</p>\n<p><span class=\"console_start\">> center.exe 3</span></p>\n<p>`add Hans Meister;Führerschein`</p>\n<p>Hans Meister betritt das Bürgeramt. Grund: Führerschein</p>\n<p>Hans Meister geht an Schalter 1.</p>\n<p>`add Lisa Lote;Umzug`</p>\n<p>Lisa Lote betritt das Bürgeramt. Grund: Umzug</p>\n<p>Lisa Lote geht an Schalter 2.</p>\n<p>`add Rosa Roth;Auswandern`</p>\n<p>Rosa Roth betritt das Bürgeramt. Grund: Auswandern</p>\n<p>Rosa Roth geht an Schalter 3.</p>\n<p>`add Roland Steiger;Ausweis`</p>\n<p>Roland Steiger betritt das Bürgeramt. Grund: Ausweis</p>\n<p>Roland Steiger stellt sich in der Warteschlange an.</p>\n<p>`add Franz Manz;keine Ahnung`</p>\n<p>Franz Manz betritt das Bürgeramt. Grund: keine Ahnung</p>\n<p>Franz Manz stellt sich in der Warteschlange an.</p>\n<p>`process 3`</p>\n<p>Das Anliegen Auswandern von Rosa Roth wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</p>\n<p>Roland Steiger geht an Schalter 3.</p>\n<p>`process 1`</p>\n<p>Das Anliegen Führerschein von Hans Meister wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</p>\n<p>Franz Manz geht an Schalter 1.</p>\n<p>`process 1`</p>\n<p>Das Anliegen keine Ahnung von Franz Manz wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</p>\n<p>`exit`</p>\n<p>Das Anliegen Umzug von Lisa Lote wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</p>\n<p>Das Anliegen Ausweis von Roland Steiger wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</p>\n<p>{% endoutput %}</p>";
            const string expectedResult =
                "<p>In dieser Aufgabe soll ein Bürgeramt mit Schaltern und einer Warteschlange für anstehende Bürger simuliert werden. Das gesamte Bürgeramt hat nur eine Warteschlange. Ein Schalter hat eine eindeutige Id. Sobald ein Schalter frei wird, stellt sich der nächste Bürger aus der Warteschlange an diesen an. Sind mehrere Schalter frei, so belegt der Bürger den Schalter mit der niedrigsten Id. Ein Bürger selbst hat einen Namen und sein Anliegen.</p>\n<p>Die Anzahl der Schalter wird beim Programmstart als Parameter übergeben. Die weitere Bedienung der Anwendung erfolgt über die Standard Eingabe. Hierbei gibt es folgende drei Befehle:</p>\n<ul>\n<li data-list=\"bullet\">\n<span class=\"ql-ui\" contenteditable=\"false\"></span><code>add &lt;Name&gt;;&lt;Anliegen&gt;</code></li>\n<li data-list=\"bullet\">\n<span class=\"ql-ui\" contenteditable=\"false\"></span>\nEin neuer Bürger betritt das Bürgeramt. Der Name wird vom Anliegen durch ein Semikolon getrennt. Ist ein Schalter frei, so geht der Bürger an diesem Schalter. Ansonsten stellt er sich in der Warteschlange an.</li>\n<li data-list=\"bullet\">\n<span class=\"ql-ui\" contenteditable=\"false\"></span><code>process &lt;SchalterId&gt;</code></li>\n<li data-list=\"bullet\">\n<span class=\"ql-ui\" contenteditable=\"false\"></span>\nDer Bürger an Schalter &lt;SchalterId&gt; wird bearbeitet. Der nächste Bürger aus der Warteschlange geht nun an diesen Schalter. Die Verarbeitung erfolgt dabei synchron. Erst nach der Verarbeitung kann der nächste Befehl eingegeben werden.</li>\n<li data-list=\"bullet\">\n<span class=\"ql-ui\" contenteditable=\"false\"></span><code>exit</code></li>\n<li data-list=\"bullet\">\n<span class=\"ql-ui\" contenteditable=\"false\"></span>\nDas Bürgeramt schließt seine Pforten. Alle an den Schalter wartende Bürger werden noch bedient. Die Bürger aus der Warteschlange müssen leider morgen wieder kommen. Sind alle Bürger bearbeitet, wird die Anwendung beendet.</li>\n</ul>\n<p><strong>Hinweis:</strong> Die Aufgabe soll synchron ablaufen. Eine Parallelisierung durch Threads oder seperate Prozesse ist nicht notwendig.</p>\n<p>Folgende Bildschirmausgaben sollen gemacht werden:</p>\n<table>\n<thead>\n<tr>\n<th>Aktion</th>\n<th>Ausgabe</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Bürger betritt Bürgeramt</td>\n<td>&lt;Name&gt; betritt das Bürgeramt. Grund: &lt;Anliegen&gt;</td>\n</tr>\n<tr>\n<td>Bürger stellt sich an Warteschlange an</td>\n<td>&lt;Name&gt; stellt sich in der Warteschlange an.</td>\n</tr>\n<tr>\n<td>Bürger geht an Schalter</td>\n<td>&lt;Name&gt; geht an Schalter &lt;SchalterId&gt;.</td>\n</tr>\n<tr>\n<td>Bürger fertig bearbeitet</td>\n<td>Das Anliegen &lt;Anliegen&gt; von &lt;Name&gt; wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</td>\n</tr>\n</tbody>\n</table>\n<p>Beispiele:</p>\n<p>\n<div><pre class='consoleblock'></p>\n<p><span class=\"console_start\">> center.exe 3</span></p>\n<p><span class=\"console_input\">add Hans Meister;Führerschein</span></p>\n<p>Hans Meister betritt das Bürgeramt. Grund: Führerschein</p>\n<p>Hans Meister geht an Schalter 1.</p>\n<p><span class=\"console_input\">add Lisa Lote;Umzug</span></p>\n<p>Lisa Lote betritt das Bürgeramt. Grund: Umzug</p>\n<p>Lisa Lote geht an Schalter 2.</p>\n<p><span class=\"console_input\">add Rosa Roth;Auswandern</span></p>\n<p>Rosa Roth betritt das Bürgeramt. Grund: Auswandern</p>\n<p>Rosa Roth geht an Schalter 3.</p>\n<p><span class=\"console_input\">add Roland Steiger;Ausweis</span></p>\n<p>Roland Steiger betritt das Bürgeramt. Grund: Ausweis</p>\n<p>Roland Steiger stellt sich in der Warteschlange an.</p>\n<p><span class=\"console_input\">add Franz Manz;keine Ahnung</span></p>\n<p>Franz Manz betritt das Bürgeramt. Grund: keine Ahnung</p>\n<p>Franz Manz stellt sich in der Warteschlange an.</p>\n<p><span class=\"console_input\">process 3</span></p>\n<p>Das Anliegen Auswandern von Rosa Roth wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</p>\n<p>Roland Steiger geht an Schalter 3.</p>\n<p><span class=\"console_input\">process 1</span></p>\n<p>Das Anliegen Führerschein von Hans Meister wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</p>\n<p>Franz Manz geht an Schalter 1.</p>\n<p><span class=\"console_input\">process 1</span></p>\n<p>Das Anliegen keine Ahnung von Franz Manz wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</p>\n<p><span class=\"console_input\">exit</span></p>\n<p>Das Anliegen Umzug von Lisa Lote wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</p>\n<p>Das Anliegen Ausweis von Roland Steiger wurde bearbeitet. Er/Sie verlässt das Bürgeramt.</p>\n<p></pre></div></p>";
            var result = MarkdownToHtml.Convert(input);
            Assert.AreEqual(expectedResult, result);
        }
    }
}
