@using SubmissionEvaluation.Shared.Models.Shared
@using System.IO
@using File = SubmissionEvaluation.Shared.Models.Shared.File
<!--TODO: Check the license thing. Need to copy it.-->
<div hidden="@hidden">
    <BlazorInputFile.InputFile OnChange="HandleFileInput" multiple class="upload-drop col-lg-11 cut_to_parent" id="@id"/>
    @foreach (var file in Files)
    {
        <FileComponent File="file"/>
    }
    @foreach (var file in OtherFiles)
    {
        <FileComponent File="file"/>
    }
</div>

@code {

    [Parameter]
    public List<DetailedInputFile> Files { get; set; } = new List<DetailedInputFile>();

    [Parameter]
    public EventCallback<List<DetailedInputFile>> FilesChanged { get; set; }

    [Parameter]
    public List<File> OtherFiles { get; set; } = new List<File>();

    [Parameter]
    public bool hidden { get; set; }

    [Parameter]
    public string Path { get; set; }

    [Parameter]
    public string id { get; set; } = "defaultID";

    public async void HandleFileInput(IFileListEntry[] files)
    {
        if (files != null)
        {
            foreach (var file in files)
            {
                var ms = new MemoryStream();
                await file.Data?.CopyToAsync(ms);
                var inputfile = new DetailedInputFile {Content = ms.ToArray(), Name = file.Name, LastModified = file.LastModified.ToString(), OriginalName = file.Name, IsDelete = false, IsFolder = false, Type = file.Type};
                if (Path != null)
                {
                    inputfile.Path = Path.StartsWith(Folder.pathSeperator) ? "" : Path;
                }
                Files.Add(inputfile);
                await FilesChanged.InvokeAsync(Files);
            }
        }
    }

}
