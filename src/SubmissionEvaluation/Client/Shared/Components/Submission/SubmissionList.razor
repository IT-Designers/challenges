@using System.Net.Http.Json
@using Member = SubmissionEvaluation.Contracts.ClientPocos.Member
@using SubmissionEvaluation.Client.Shared.Components.Table
@using System.ComponentModel

@inject HttpClient httpClient
@inject NavigationManager navi

<Table TEntry="SubmissionResult<Member>" TableClass="table table-sm" Entries="Model?.Submissions" RowClick="SelectSubmission" RowColor="@(context => context.Id == Model.SubmissionId ? "lavender" : null)">
    <Column TEntry="SubmissionResult<Member>" Header="Datum">
        @(context.SubmissionDate.Date == DateTime.Today ? context.SubmissionDate.ToShortTimeString() : context.SubmissionDate.ToShortDateString())
    </Column>
    <Column TEntry="SubmissionResult<Member>" Header="Sprache">
        @context.Language
        @if (context.IsPassed && context.ExecutionDuration.HasValue)
        {
            <br/>
            @(context.ExecutionDuration + " ms")
        }
    </Column>
    <Column TEntry="SubmissionResult<Member>" Header="Ergebnis">
        @if (context.IsPassed)
        {
            <img src=@($"/images/rating_star{context.ReviewResult}.png") style="height: 24px; width: 24px;"/>
            if (context.HasReviewData)
            {
                <a href="/Review/View/@Model.Id/@context.Id" class="btn-link ml-1" title="Reviewergebnis anzeigen">
                    <span class="oi oi-eye"></span>
                </a>
            }
        }
        else if (!context.IsQueued)
        {
            <img src="@("/images/rating_unsolved.png")" style="height: 24px; width: 24px;"/>
        }
        else
        {
            <img src="@("/images/rating_missing.png")" style="height: 24px; width: 24px;"/>
        }
    </Column>
</Table>

@code {

    [Parameter]
    public UploadModel<Result, Member> Model { get; set; }

    [Parameter]
    public EventCallback<UploadModel<Result, Member>> ModelChanged { get; set; }

    private async void SelectSubmission(SubmissionResult<Member> submissionResult)
    {
        Model.SubmissionId = submissionResult.Id;
        Model = await httpClient.GetFromJsonAsync<UploadModel<Result, Member>>($"/api/Submission/Add/{Model.Id}/{submissionResult.Id}");
        if (Model.HasError)
        {
            navi.NavigateTo($"Home/Error/{Model.Message}");
        }
        await ModelChanged.InvokeAsync(Model);
        StateHasChanged();
    }

}
