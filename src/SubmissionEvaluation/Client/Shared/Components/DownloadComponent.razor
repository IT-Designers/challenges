@using System.Net.Http.Json
@using SubmissionEvaluation.Shared.Classes.Messages
@using SubmissionEvaluation.Shared.Classes

@inject NavigationManager NavigationManager
@inject HttpClient HttpClient
@inject IJSRuntime Runtime

<button @onclick="Download" class="@Class" title="@Title">@((MarkupString) Content)</button>

@code {

    [Parameter]
    public string Class { get; set; }

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public string Content { get; set; }

    [Parameter]
    public string Id { get; set; }

    [Parameter]
    public string SubId { get; set; }

    [Parameter]
    public bool TwoIds { get; set; }

    [Parameter]
    public string Url { get; set; }

    [Parameter]
    public string FileName { get; set; }

    public async void Download()
    {
        if (Id == null || TwoIds && SubId == null)
        {
            NavigationManager.NavigateTo($"Home/Error/{ErrorMessages.IdError}");
        }
        DownloadInfo info;
        if (TwoIds)
        {
            info = await HttpClient.GetFromJsonAsync<DownloadInfo>($"{Url}/{Id}/{SubId}");
        }
        else
        {
            info = await HttpClient.GetFromJsonAsync<DownloadInfo>($"{Url}/{Id}");
        }
        if (info.Data != null)
        {
            await Runtime.InvokeAsync<object>("saveAsFile", FileName, Convert.ToBase64String(info.Data));
        }
        else
        {
            NavigationManager.NavigateTo($"Home/Error/{info.ErrorMessage}");
        }
    }

}
