@page "/Members/Member/{id}"

@using System.Net.Http.Json
@using SubmissionEvaluation.Client.Shared.Components.Members
@using SubmissionEvaluation.Shared.Models.Members
@using SubmissionEvaluation.Shared.Models.Permissions
@using SubmissionEvaluation.Shared.Classes
@using SubmissionEvaluation.Shared.Classes.Messages

@inject HttpClient HttpClient
@inject NavigationManager Navi

<div class="row">
<MemberHeader Model="Model"/>
<Achievements Model="Model"/>

<div class="col-sm-12">
    <div class="post-area">
        <div class="post-header">
            Ungelöste Challenges
        </div>
        @if (Challenges != null && Challenges.Challenges != null)
        {
            <div class="post">
                <table class="ranking_table">
                    <thead>
                    <tr class="ranking_head">
                        <th class="th_name">Challenge</th>
                    </tr>
                    </thead>
                    @foreach (var challenge in Challenges.Challenges)
                    {
                        <tr>
                            <td>
                                <a href=@($"/Challenge/View/{challenge.Id}")>@challenge.Title</a>
                            </td>
                        </tr>
                    }
                </table>
            </div>
        }
    </div>
</div>

<div class="col-sm-12">
    <div class="post-area">
        <div class="post-header">
            Punktewertungen
        </div>
        @if (Model != null)
        {
            <div class="post">
                <table class="ranking_table">
                    <thead>
                    <tr class="ranking_head">
                        <th class="th_name">Name</th>
                        <th class="th_name">Platz</th>
                        <th class="th_name">Punkte</th>
                        @if (PermissionHelper.CheckPermissions(Actions.View, "Member", Permissions, Restriction.Members, Id))
                        {
                            <th class="th_name">Übereinstimmung in % (Eigene / Fremde)</th>
                        }
                        <th class="th_name">Info</th>
                    </tr>
                    </thead>
                    @foreach (var submission in Model.Points)
                    {
                        <tr>

                            <td>
                                @switch (submission.Entry?.Challenge)
                                {
                                    case "ChallengeCreators":
                                        @((MarkupString) "Aufgabenerstellung")
                                        break;
                                    case "Achievements":
                                        @((MarkupString) "Aufgabenerstellung")
                                        break;
                                    case "Reviews":
                                        @((MarkupString) "Review")
                                        break;
                                    default:
                                        <a href=@($"/Challenge/View/{submission.Entry?.Challenge}")>@submission.Entry?.Challenge</a>
                                        break;
                                }
                            </td>

                            <td>
                                @((MarkupString) (submission.Entry.Rank > 0 ? submission.Entry.Rank.ToString() : "-"))
                            </td>
                            <td>
                                @((MarkupString) (submission.Entry.Points > 0 ? submission.Entry.Points.ToString() : "-"))
                            </td>
                            @if (PermissionHelper.CheckPermissions(Actions.View, "Member", Permissions, Restriction.Members, Id))
                            {
                                @if (submission.DuplicatedFrom != null)
                                {
                                    <td>@submission.Entry.DuplicateScore (<a href=@($"/Submission/View/{submission.Entry.Challenge}/{submission.Submission?.SubmissionId}")>@(Model.Name ?? Model.Id)</a> / <a href=@($"/Submission/View/{submission.Entry.Challenge}/{submission.DuplicatedFrom.SubmissionId}")>@(submission.DuplicatedFrom.MemberName ?? submission.DuplicatedFrom.MemberId)</a>)</td>
                                }
                                else
                                {
                                    <td>-</td>
                                }
                            }
                            <td>
                                @switch (submission.Entry.Challenge)
                                {
                                    case "ChallengeCreators":
                                        <a href=@($"/Challenge/View/{submission.Entry.Language}")>@submission.Entry.Language</a>
                                        break;
                                    case "Achievements":
                                        CustomSettings.Achievements.TryGetValue(submission.Entry.Language, out var config);
                                        @((MarkupString) (config?.Title ?? "Achievement"))
                                        break;
                                    case "Reviews":
                                        @((MarkupString) submission.Entry.Language)
                                        break;
                                    default:
                                        if (submission.Entry.Language != null)
                                        {
                                            <a href=@("/Help/ViewPage/Compilers")>@submission.Entry.Language</a>
                                        }
                                        else
                                        {
                                            @((MarkupString) "-")
                                        }
                                        break;
                                }
                            </td>
                        </tr>
                    }

                </table>
            </div>
        }
    </div>
</div>

<div class="col-sm-12">
    <div class="post-area">
        <div class="post-header">
            Die neuesten Aktivitäten
        </div>
        <div class="post">
            <table class="ranking_table">
                <thead>
                <tr class="ranking_head">
                    <th class="th_name">Datum</th>
                    <th class="th_name">Challenge</th>
                    <th class="th_name">Sprache</th>
                    <th class="th_name">Ergebnis</th>
                </tr>
                </thead>
                @if (Model != null)
                {
                    var hasPermission = PermissionHelper.CheckPermissions(Actions.View, "Member", Permissions, Restriction.Members, Id);
                    foreach (var entry in hasPermission ? Model.History : Model.History.Take(30))
                    {
                        switch (entry.Type)
                        {
                            case HistoryType.ChallengeSubmission:
                                if (!CustomSettings.Results.TryGetValue(entry.Result?.ToString(), out var resultConfig))
                                {
                                    resultConfig = CustomSettings.Results["Undefined"];
                                }
                                <tr style="background: #@resultConfig.Color">
                                    <td class="d-none d-sm-table-cell">
                                        @entry.Date.ToShortDateString()
                                    </td>
                                    <td>
                                        <a href=@($"Challenge/View/{entry.Challenge}")>@entry.Challenge</a>
                                    </td>
                                    <td>
                                        @if (entry.Language != null)
                                        {
                                            <a href="Help/ViewPage/Compilers">@entry.Language</a>
                                        }
                                    </td>
                                    <td>
                                        <a href=@($"Submission/Add/{entry.Challenge}/{entry.Id}")>@resultConfig.Description</a>
                                    </td>
                                </tr>
                                break;
                            case HistoryType.ReviewAvailable:
                                <tr style="background: #f08080">
                                    <td>@entry.Date.ToShortDateString()</td>
                                    <td>
                                        <a href="/Review/Overview">@entry.Challenge</a>
                                    </td>
                                    <td></td>
                                    <td>
                                        <b>Ausstehendes Review</b>
                                    </td>
                                </tr>
                                break;
                            case HistoryType.SubmissionRated:
                                <tr style="background: #ddffdd">
                                    <td>@entry.Date.ToShortDateString()</td>
                                    <td>
                                        <a href=@($"Submission/Add/{entry.Challenge}")>@entry.Challenge</a>
                                    </td>
                                    <td></td>
                                    <td>Reviewergebnis verfügbar</td>
                                </tr>
                                break;
                            case HistoryType.SubmissionNowFailing:
                                <tr style="background: #f08080">
                                    <td>@entry.Date.ToShortDateString()</td>
                                    <td>
                                        <a href=@($"Submission/Add/{entry.Challenge}")>@entry.Challenge</a>
                                    </td>
                                    <td></td>
                                    <td>Bisher laufende Einreichung schlägt nun fehl (=Aufgabenänderung)</td>
                                </tr>
                                break;
                        }
                    }
                }
            </table>
        </div>
    </div>
</div>

</div>

@code {
    MemberModel<Result, Contracts.ClientPocos.Member> Model { get; set; }
    Permissions Permissions { get; set; }
    CustomizationSettingsClient CustomSettings { get; set; }
    ChallengeOverviewModel Challenges { get; set; }

    [Parameter]
    public string Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Permissions = await HttpClient.GetFromJsonAsync<Permissions>("api/Members/Permissions");
        var features = await HttpClient.GetFromJsonAsync<FeatureSettings>("api/Account/getSettings");
        if (!features.EnableRating && !PermissionHelper.CheckPermissions(Actions.View, "Member", Permissions, Restriction.Members, Id))
        {
            Navi.NavigateTo($"Home/Error/{ErrorMessages.NoPermission}");
        }
        CustomSettings = await HttpClient.GetFromJsonAsync<CustomizationSettingsClient>("api/Account/GetCustomSettings");
        Model = await HttpClient.GetFromJsonAsync<MemberModel<Result, Contracts.ClientPocos.Member>>($"api/Members/Get/{Id}");
        Challenges = await HttpClient.GetFromJsonAsync<ChallengeOverviewModel>($"api/Challenge/GetAllChallengesToDoByMemberId/{Id}");
        if (Model.HasError)
        {
            Navi.NavigateTo($"Home/Error/{Model.Message}");
        }
        StateHasChanged();
    }

}
