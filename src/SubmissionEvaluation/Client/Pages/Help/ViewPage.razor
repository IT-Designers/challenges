@page "/Help/ViewPage"
@page "/Help/ViewPage/{pathOne}/{pathTwo}"
@page "/Help/ViewPage/{pathOne}"

@using System.Net.Http.Json
@using SubmissionEvaluation.Shared.Models.Help
@using SubmissionEvaluation.Shared.Classes

@inject HttpClient HttpClient

<style>
    button {
        -webkit-appearance: none;
        background-color: transparent;
        border: none;
        color: #337ab7;
        text-decoration: none;
    }
</style>

<div class="row">
    @if (Model != null)
    {
        <div class="col-lg-9">
            <div class="post-area">

                <div class="post-header">
                    <h1>
                        @Model.Title
                        @if (UserSettings.Roles.Contains("admin"))
                        {
                            <a class="btn btn-outline-dark" href=@($"/Admin/EditHelpPage/{Model.Path}")>Bearbeiten</a>
                        }
                    </h1>
                </div>
                <div class="post">
                    @((MarkupString) MarkdownToHtml.Convert(Model.Description, $"/files/help/{Model.Path}/"))
                </div>
            </div>
        </div>
        <div class="col-lg-3">
            <div class="shadow-bottom-center" style="margin-bottom: 10px">
                <div class="categories-list-header">Topics</div>
                <ol>
                    @if (Model.Pages != null)
                    {
                        foreach (var hp in Model.Pages)
                        {
                            <li>
                                <button @onclick="() => UpdateViewPage(hp.Path)">@hp.Title</button>
                                @if (hp.SubPages.Count > 0)
                                {
                                    <ul>
                                        @foreach (var shp in hp.SubPages)
                                        {
                                            <li>
                                                <button @onclick="() => UpdateViewPage(shp.Path)">@shp.Title</button>
                                            </li>
                                        }
                                    </ul>
                                }
                            </li>
                        }
                    }
                </ol>
            </div>

        </div>
    }
</div>

@code {
    HelpModel Model { get; set; }
    SettingsModel UserSettings { get; set; }

    [Parameter]
    public string PathOne { get; set; }

    [Parameter]
    public string PathTwo { get; set; }

    string Path { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Path = PathTwo == null ? PathOne : PathOne + "\\" + PathTwo;
        await FetchFromServer();
    }

    async void UpdateViewPage(string newPath)
    {
        Path = newPath;
        await FetchFromServer();
    }

    async Task FetchFromServer()
    {
        if (Path == null)
        {
            Path = " ";
        }
        //Sincerely a get-request, but the path-string could contain slashes itself, so it needs to be transferred as a model.
        var responseMessage = await HttpClient.PostAsJsonAsync("api/Help/getViewPage", Path);
        if (responseMessage.IsSuccessStatusCode)
        {
            Model = await responseMessage.Content.ReadFromJsonAsync<HelpModel>();
        }
        UserSettings = await HttpClient.GetFromJsonAsync<SettingsModel>("api/Account/getusersettings");
        StateHasChanged();
    }

}
