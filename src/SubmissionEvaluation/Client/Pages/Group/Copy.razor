@page "/Group/Copy/{groupId}"

@using System.Net.Http.Json
@using SubmissionEvaluation.Shared.Models.Permissions
@using SubmissionEvaluation.Shared.Classes
@using SubmissionEvaluation.Shared.Classes.Messages

@inject HttpClient HttpClient
@inject NavigationManager Navi

<div class="post-area">
    <div class="post-header">Gruppe kopieren</div>
    <div class="card-body group-creation-panel">
        @if (Model != null)
        {
            <MessageHeader Model="Model"/>
            <EditForm OnValidSubmit="CopyGroup" Model="Model">
                <div>
                    <label for="copyFromTextBox">Alte Gruppen-ID</label>
                    <InputText @bind-Value="Model.NameCopyFrom" readonly class="form-control" id="copyFromTextBox"/>
                    <p id="copyFromHelpBlock" class="form-text text-muted">
                        Gibt die Gruppe an, von welcher kopiert werden soll.
                    </p>
                </div>
                <div>
                    <label for="copyToTextBox">Neue Gruppen-ID</label>
                    <InputText @bind-Value="Model.NameCopyTo" class="form-control" id="copyToTextBox"/>
                    <p id="copyToHelpBox" class="form-text text-muted">
                        Gibt die neue Gruppen-ID an.
                    </p>
                </div>
                <button id="btnCopy" name="command" type="submit" value="copy" class="btn btn-outline-dark btn-block text-center input-field-padding"><span class="oi oi-book"></span> Gruppe kopieren</button>
            </EditForm>
        }
        else {
            <Wave />
        }
    </div>
</div>

@code {

    [Parameter]
    public string GroupId { get; set; }

    CopyModel Model { get; set; }

    protected override async void OnInitialized()
    {
        var permissions = await HttpClient.GetFromJsonAsync<Permissions>("api/Members/Permissions");
        if (!PermissionHelper.CheckPermissions(Actions.Create, "Challenges", permissions, Restriction.Challenges, GroupId))
        {
            Navi.NavigateTo($"Home/Error/{ErrorMessages.NoPermission}");
        }
        Model = new CopyModel {NameCopyFrom = GroupId};
        StateHasChanged();
    }

    public async void CopyGroup()
    {
        var responseMessage = await HttpClient.PostAsJsonAsync("api/Group/Copy", Model);
        if (responseMessage.IsSuccessStatusCode)
        {
            Model = await responseMessage.Content.ReadFromJsonAsync<CopyModel>();
            if (!Model.HasError)
            {
                Navi.NavigateTo($"/Group/Edit/{Model.NameCopyTo}");
            }
            else
            {
                Navi.NavigateTo($"Home/Error/{Model.Message}");
            }
        }
    }

}
