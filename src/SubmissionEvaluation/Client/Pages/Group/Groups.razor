@page "/Groups"

@using System.Net.Http.Json
@using Group = SubmissionEvaluation.Contracts.ClientPocos.Group
@using SubmissionEvaluation.Shared.Models.Admin
@using SubmissionEvaluation.Shared.Models.Permissions
@using SubmissionEvaluation.Shared.Classes
@using SubmissionEvaluation.Shared.Classes.Messages
@using SubmissionEvaluation.Client.Shared.Components.Table
@using System.ComponentModel

@inject HttpClient httpClient
@inject NavigationManager navi

<div class="row">
    <div class="col-12">
        <div class="post-area post">
            @if (Model != null)
            {
                <div class="post-header">
                    <h1>
                        Gruppen verwalten
                        @if (Permissions.IsAdmin)
                        {
                            <a href="Group/Create" title="Neue Gruppe anlegen" class="btn btn-sm">
                                <span class="oi oi-plus"></span>
                            </a>
                        }
                    </h1>
                </div>
                <MessageHeader Model="Model"/>
                <Table TEntry="Group" Entries="Model.Groups" SearchEnabled="true" >
                    <Column TEntry="Group" Header="Id" StringValue="@(context => context.Id)"/>
                    <Column TEntry="Group" Header="Name" StringValue="@(context => context.Title)" SortDirection="ListSortDirection.Ascending"/>
                    <Column TEntry="Group" Header="Aktionen">
                        <a href=@($"Group/Edit/{context.Id}") title="Editieren" class="btn btn-sm">
                            <span class="oi oi-pencil"></span>
                        </a>
                        @if (Permissions.IsAdmin)
                        {
                            <a href=@($"Admin/ConfirmAction/{context.Id}/DeleteGroup") title="LÃ¶schen" class="btn btn-sm">
                                <span class="oi oi-trash"></span>
                            </a>
                            <a href=@($"Group/Copy/{context.Id}") title="Kopieren" class="btn btn-sm">
                                <span class="oi oi-copywriting"></span>
                            </a>
                        }
                    </Column>
                </Table>
            }
            else
            {
                <Wave/>
            }
        </div>

    </div>
</div>


@code {
    AdminGroupsModel<Group> Model { get; set; }
    Permissions Permissions { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Permissions = await httpClient.GetFromJsonAsync<Permissions>("api/Members/Permissions");
        if (!PermissionHelper.CheckPermissions(Actions.View, "Groups", Permissions))
        {
            navi.NavigateTo($"Home/Error/{ErrorMessages.NoPermission}");
        }
        Model = await httpClient.GetFromJsonAsync<AdminGroupsModel<Group>>("api/Group/Groups");

        StateHasChanged();
    }

}
