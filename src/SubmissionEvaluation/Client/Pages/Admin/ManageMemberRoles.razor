@page "/Admin/ManageMemberRoles/{memberId}"
@using System.Net.Http.Json
@using SubmissionEvaluation.Shared.Models.Admin
@using SubmissionEvaluation.Shared.Models.Permissions
@using SubmissionEvaluation.Shared.Classes
@using SubmissionEvaluation.Shared.Classes.Messages
@inject HttpClient HttpClient
@inject NavigationManager Navi
<div class="row">
    <div class="col-12">
        <div class="post-area post">
            @if (Model != null)
            {
                <div>
                    <h3>Verfügbare Rollen für @Model.Name</h3>
                </div>
                <EditForm Model="Model" OnValidSubmit="SendChangesToServer">
                    <ul class="no-styling">
                        @for (var i = 0; i < Model.Roles.Length; i++)
                        {
                            var index = i;
                            <li>
                                <label><InputCheckbox @bind-Value="Model.Roles[index].Selected"></InputCheckbox>@Model.Roles[i].Title &nbsp; </label>
                            </li>
                        }
                    </ul>
                    <div class="input-field-padding">
                        <input id="Update" name="Update" type="submit" class="btn btn-outline-dark btn-margin col-sm-3 ml-auto" value="Änderungen übernehmen"/>
                    </div>
                </EditForm>
            }
        </div>

    </div>
</div>

@code {

    [Parameter]
    public string MemberId { get; set; }

    ManageMemberRolesModel Model { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var permissions = await HttpClient.GetFromJsonAsync<Permissions>("api/Members/Permissions");
        if (!PermissionHelper.CheckPermissions(Actions.Edit, "Users", permissions))
        {
            Navi.NavigateTo($"Home/Error/{ErrorMessages.NoPermission}");
        }
        Model = await HttpClient.GetFromJsonAsync<ManageMemberRolesModel>($"api/Admin/AllPossibleMemberRoles/{MemberId}");
    }

    async void SendChangesToServer()
    {
        var responseMessage = await HttpClient.PostAsJsonAsync("api/Admin/NewMemberRoles", Model);
        if (responseMessage.IsSuccessStatusCode)
        {
            Model = await responseMessage.Content.ReadFromJsonAsync<ManageMemberRolesModel>();
        }
        if (Model.HasSuccess)
        {
            Navi.NavigateTo("Admin/Users");
        }
    }

}
