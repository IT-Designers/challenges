@page "/Bundle/Create"

@using System.Net.Http.Json
@using SubmissionEvaluation.Client.Shared.Components.Bundle
@using SubmissionEvaluation.Shared.Classes
@using SubmissionEvaluation.Shared.Classes.Messages
@using SubmissionEvaluation.Shared.Models.Permissions

@inject HttpClient HttpClient
@inject NavigationManager Navi

<style>
    .consoleblock {
        background: #000 !important;
        border-width: 1px !important;
        color: #DDD !important;
        font-family: Menlo, Monaco, Consolas, "Courier New", monospace !important;
        font-size: 13px !important;
        line-height: 1.1 !important;
        padding: 9.5px !important;
    }
</style>

<div>
    <div class="post-area">
        <div class="post-header">
            Neues Bundle erstellen
        </div>
        <div class="card-body challenge-creation-panel">
            @if (Model != null)
            {
                <EditForm Model="Model" id="challengeform" OnValidSubmit="CreateBundle" OnInvalidSubmit="SaveEditor">
                    <ValidationSummary/>
                    <DataAnnotationsValidator/>
                    <div class="card-body challenge-creation-panel">
                        <MessageHeader Model="Model"/>
                        <div id="project-group" class="form-group">
                            <h4 class="col-form-label">ID* (Späteres Ändern nicht möglich!)</h4>
                            <InputText @bind-Value="Model.Id" class="form-control"/>
                            <ValidationMessage For="() => Model.Id" class="text-danger"/>
                        </div>
                        @if (CustomSettings != null)
                        {
                            <EditBundleFieldsPartial Model="Model" Settings="CustomSettings" @ref="Partial"/>
                        }
                        <button id="create" type="submit" class="btn btn-outline-dark btn-block text-center input-field-padding" value="Aufgabe erstellen!"><span class="oi oi-book"></span> Bundle erstellen</button>
                    </div>
                </EditForm>
            }
        </div>
    </div>
</div>

@code {
    BundleModel Model { get; set; }
    CustomizationSettingsClient CustomSettings { get; set; }
    EditBundleFieldsPartial Partial { get; set; }

    protected override async void OnInitialized()
    {
        var permissions = await HttpClient.GetFromJsonAsync<Permissions>("api/Members/Permissions");
        if (!PermissionHelper.CheckPermissions(Actions.Create, "Bundles", permissions))
        {
            Navi.NavigateTo($"Home/Error/{ErrorMessages.NoPermission}");
        }
        CustomSettings = await HttpClient.GetFromJsonAsync<CustomizationSettingsClient>("api/Account/GetCustomSettings");
        Model = await HttpClient.GetFromJsonAsync<BundleModel>("api/Bundle/Create");
        StateHasChanged();
    }

    async void SaveEditor()
    {
        await Partial.SaveEditor();
    }

    async void CreateBundle()
    {
        await Partial.SaveEditor();
        var responseMessage = await HttpClient.PostAsJsonAsync("api/Bundle/Create", Model);
        if (responseMessage.IsSuccessStatusCode)
        {
            Model = await responseMessage.Content.ReadFromJsonAsync<BundleModel>();
        }
        if (Model.HasSuccess)
        {
            Navi.NavigateTo("Bundle/Edit/" + Model.Id);
        }
        StateHasChanged();
    }

}
